# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SSfaAOpYmD9OHulVhfMoCOUYBbHXhFO7
"""

!pip install streamlit plotly pandas pyngrok

# 2. Write the Streamlit app to a file
with open("app.py", "w") as f:
    f.write("""
import streamlit as st
import pandas as pd
import plotly.express as px

# --- Load Data ---
@st.cache_data
def load_data():
    return pd.read_csv("DATA.csv")

df = load_data()

st.set_page_config(page_title="Nigeria Livelihoods & COVID-19 Dashboard", layout="wide")

st.title("Nigeria Livelihoods & COVID-19 Impact Dashboard")
st.markdown("### Based on survey of 29,408 respondents")

# --- Main Income Sources ---
st.subheader("Main Sources of Income")
income_counts = df["E10"].value_counts().reset_index()
income_counts.columns = ["Income Source", "Count"]
fig_income = px.bar(income_counts.head(10),
                    x="Income Source", y="Count",
                    color="Count", color_continuous_scale="Blues")
fig_income.update_layout(xaxis_title="", yaxis_title="No. of Respondents",
                         xaxis_tickangle=45, showlegend=False)
st.plotly_chart(fig_income, use_container_width=True)

# --- COVID-19 Business Challenges ---
st.subheader("COVID-19 Business Challenges")
challenge_counts = df["E13e"].value_counts().reset_index()
challenge_counts.columns = ["Challenge", "Count"]
fig_challenges = px.bar(challenge_counts.head(10),
                        x="Challenge", y="Count",
                        color="Count", color_continuous_scale="Greens")
fig_challenges.update_layout(xaxis_title="", yaxis_title="No. of Respondents",
                             xaxis_tickangle=45, showlegend=False)
st.plotly_chart(fig_challenges, use_container_width=True)

# --- Payment Methods ---
st.subheader("Payment Methods")
payment_counts = df["E12"].value_counts().reset_index()
payment_counts.columns = ["Payment Method", "Count"]
fig_payment = px.pie(payment_counts, names="Payment Method", values="Count",
                     color_discrete_sequence=px.colors.qualitative.Set3)
st.plotly_chart(fig_payment, use_container_width=True)

# --- Attitudes (E13f Likert Scale) ---
st.subheader("Attitudes Towards COVID-19 (E13f)")
attitude_cols = [col for col in df.columns if col.startswith("E13f")]
if attitude_cols:
    attitude_df = df[attitude_cols].melt(var_name="Question", value_name="Response")
    fig_attitudes = px.histogram(attitude_df, x="Question", color="Response",
                                 barmode="stack",
                                 category_orders={"Response": ["Strongly disagree", "Disagree", "Neutral", "Agree", "Strongly agree"]})
    fig_attitudes.update_layout(xaxis_tickangle=45)
    st.plotly_chart(fig_attitudes, use_container_width=True)

# --- Heatmap for Main Income Sources ---
st.subheader("Heatmap: Main Income Sources")
heatmap_df = income_counts.set_index("Income Source")
fig_heatmap = px.imshow([heatmap_df["Count"].tolist()],
                        labels=dict(x="Income Source", y="", color="Count"),
                        x=heatmap_df.index, aspect="auto", color_continuous_scale="Blues")
st.plotly_chart(fig_heatmap, use_container_width=True)

# --- Narrative ---
st.markdown("## Narrative")
st.write(\"""
Our survey of **29,408 respondents** reveals that the majority of Nigerians rely on informal income sources like small-scale farming, petty trading, and personal services. COVID-19 severely disrupted these livelihoods, with drops in customer demand and market closures topping the list of challenges.

Cash remains the dominant payment method, limiting access to digital financial tools and slowing crisis aid delivery. Supporting informal earners with microloans, digital finance access, and business training will be key to building resilience.
\""")
""")

# 3. Upload your DATA.csv file
from google.colab import files
files.upload()  # Select your DATA.csv

# 4. Run Streamlit with ngrok tunnel
from pyngrok import ngrok
!streamlit run app.py &

public_url = ngrok.connect(8501)
print(f"Streamlit app is live here: {public_url}")



